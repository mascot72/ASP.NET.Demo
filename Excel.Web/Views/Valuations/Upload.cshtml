@{
    //Layout = null;
    var i = 1;
}
@model System.Data.DataTable
@using System.Data;

<!DOCTYPE html>
<h2>Upload Files</h2>
<div ng-app="App" ng-controller="AppCtrl as vm">
    @using (Html.BeginForm("Upload", "Valuations", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary()

        <div class="form-group">
            <input type="file" id="dataFile" name="upload" />
        </div>
        <div class="form-group">
            <input type="submit" name="" value="Upload process" class="btn btn-default" onclick="isReadonly.value='false'" />
        </div>
        <div class="input-group">
            <span class="input-group-btn">
                <button class="btn btn-default" type="button">Go!</button>
            </span>
            <input type="text" name="folderPath" class="form-control" placeholder="Search for Folder">
        </div><!-- /input-group -->
        <div class="form-group">
            <input type="submit" name="" value="Upload view" class="btn btn-default" onclick="isReadonly.value='true'" />
            <input type="hidden" name="isReadonly" value="false" />
            <label>preocess file count:</label><input type="number" name="workCount" class="text-right" ng-model="targetCount" />
            <div class="input-group">
                <span class="label label-default">기존처리 파일재처리(상태선택)</span>
                <select name="processState" class="form-control">
                    <option value="">All</option>
                    <option value="E">Error</option>
                    <option value="S">Successful</option>
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6 col-xs-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        Target Files
                        <input type="checkbox" id="allCheck" ng-model="selectedAll" ng-click="checkAll()" /><label for="allCheck">All Check</label>
                    </div>
                    <div class="panel-body">
                        <ul class="list-group">
                            <li class="list-group-item itemRow" ng-repeat="item in files | orderBy:'Name'">
                                <span class="badge">{{item.Length | number}}</span>
                                <input type="checkbox" ng-model="item.selected" />
                                {{$index+1}} | {{item.Name}}
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-xs-12">
                <div class="panel panel-default">
                    <div class="panel-body" style="padding:5px;">
                        <div class="alert alert-danger" role="alert"><span class="glyphicon glyphicon-alert"></span> Warning! real send , naver cancel</div>
                        <div ng-show="progressing">
                            <div class="progress">
                                <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" ng-style="{width: rate +'%'}">
                                    {{rate}}%
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="panel-footer">
                        <button type="button" class="btn btn-info height2 large" ng-click="loadFiles()" ng-disabled="readed">Get Target</button>
                        <button type="button" class="btn btn-danger height2 large realSend" ng-click="realButtonClick()" ng-disabled="sended">Real Upload</button>
                    </div>
                </div>
            </div>
        </div>
        if (ViewBag.Message != null)
        {
            <div class="form-horizontal">
                @ViewBag.Message
            </div>
        }
        if (Model != null)
        {
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Seq.</th>
                        @foreach (DataColumn col in Model.Columns)
                        {
                            <th>@col.ColumnName</th>
                        }
                    </tr>
                    <tr>
                        <th></th>
                        @foreach (DataColumn col in Model.Columns)
                        {
                            <th>@col.DataType (@col.Caption)</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (DataRow row in Model.Rows)
                    {
                        <tr>
                            <td>@(i++)</td>
                            @foreach (DataColumn col in Model.Columns)
                            {
                                <td>@row[col.ColumnName]</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/animate")

    <script>
        var app = angular.module("App", ['ngAnimate'])
        .controller('AppCtrl', ['$scope', '$interval', '$http', function ($scope, $interval, $http) {
            var self = this, j = 0, counter = 0, stop = 0, newVal, oldVal;
            $scope.format = 'y/M/d a h:m:s';
            $scope.rate = 0;	//진행율
            $scope.progressing = false;	//전송중 여부
            $scope.targetCount = 0;
            $scope.files = [];
            $scope.readed = false;
            $scope.sended = true;

            $scope.targetState = function () {
                return ($scope.targetCount > 0);
            };

            var startDate = Date.now();

            $scope.checkAll = function () {
                if ($scope.selectedAll) {
                    $scope.selectedAll = true;
                } else {
                    $scope.selectedAll = false;
                }
                angular.forEach($scope.files, function (item) {
                    item.selected = $scope.selectedAll;
                });

            };

            //진행상황조회
            var progressUpdate = function () {
                
                $http({
                    method: 'POST',
                    url: 'GetProcessRate',
                    data: { workCount: $('[name=workCount]').val(), processState: $('[name=processState]').val(), startDate: startDate },
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8' }
                })
                .success(function (result) {

                    var data = result;
                    if (data) {
                        //angular.forEach(data, function (task, index) {
                        var successfulCount = data.successfulCount,
                            targetCount = $scope.targetCount ? $scope.targetCount : data.targetCount;
                        if (successfulCount != 0 && targetCount != 0) {
                            $scope.rate = Math.round(successfulCount / targetCount * 100);
                        }
                        else {
                            $scope.rate = 0;
                        }
                        newVal = data.rate;
                        if (newVal != oldVal) {
                            oldVal = newVal;
                            j = 0;
                        }
                        else
                            j++;

                        if ($scope.rate == 100) {
                            $scope.sendStop();
                            $('.realSend').text('Send Successfuly(' + targetCount + ')');
                            $('.realSend').attr('disabled', 'disabled');

                            //전송이 완료되었으니 상태를 마감처리 하도록 유도!
                            if (confirm('Send Successfuly, this Close?')) {
                                //updateTmStatus('CLOSED', function () {
                                //다시조회

                                //});
                            }
                        }
                        //});
                        counter++;
                    }
                    if (j > 2 * 20) {
                        $scope.sendStop();	//변화가 20초이상 없으면 중단!
                    }
                })
                .error(function (err) {
                    $scope.sendStop();
                    alert(err);
                });
            };


            //파일정보 읽기(대상)
            $scope.loadFiles = function () {
                $scope.readed = true;
                $http({
                    method: 'POST',
                    url: 'GetUploadableData',
                    async:true,
                    data: {
                        workCount: $('[name=workCount]').val(),
                        processState: $('[name=processState]').val(),
                        startDate: startDate
                    }
                })
                .success(function (result) {
                    if (result) {
                        
                        $scope.files = result;
                    }
                    $scope.rate = 0;
                    $scope.progressing = false;
                    $scope.readed = false;
                    $scope.sended = false;
                })
                .error(function (err) {
                    alert(err);
                    $scope.readed = false;
                });
            };
            
            //Excel Import수행
            var remainCount = 0;
            var realSend = function () {
                $scope.readed = true;
                $scope.sended = true;
                //파일업로드 수행
                var successfulCount = 0;
                //업로드대상수
                var targetCount = 0;
                remainCount = targetCount;
                $.each($scope.files, function (idx, val) {
                    if (val.selected) {
                        targetCount++;
                    }
                });
                
                $.each($scope.files, function (idx, val) {
                    $scope.progressing = true;
                    if (val.selected) {
                        successfulCount++;
                        fileUpload(val.Directory + '\\' + val.Name);
                        $scope.rate = Math.round(successfulCount / targetCount * 100);
                        $('.itemRow:eq(' + idx + ')').addClass('text-success');
                        remainCount--;
                        if (remainCount < 1) {
                            $scope.sended = false;
                            $scope.readed = false;
                        }
                    }
                });
                
            };

            //전송버튼event
            $scope.realButtonClick = function () {
                sendActionType = 'realSend';
                var sendable = $('.realSend').text();
                if (sendable == 'Cancel Uploading') {
                    $('.realSend').text('Real Send');
                    //$scope.sendStop();
                }
                else {
                    realSend();                    
                }
            }

            //전송률 확인시작
            $scope.sendStart = function () {
                counter = 0;
                $scope.rate = 0;
                $scope.progressing = true;
                stop = $interval(progressUpdate, 500);
            };
            //전송률 확인중지
            $scope.sendStop = function () {
                $interval.cancel(stop);
                stop = undefined;
                $scope.rate = 100;
                $scope.progressing = false;
                $('.realSend').text('Real Upload');
            };
            //소멸자 반드시 수행한다
            $scope.$on('$destroy', function () {
                $scope.sendStop();
            });

            //파일업로드
            var fileUpload = function (filePath) {
                
                $http({
                    method: 'POST',
                    url: 'MyFileUpload',
                    async: false,
                    data: { processState: $('[name=processState]').val(), filePath: filePath }
                })
                .success(function (result) {
                    var data = result;
                    if (data) {
                        return true;
                    }
                    return false;
                })
                .error(function (err) {
                    alert(err);
                });
            };

        }]);

        //대상파일 조회
        function viewMonitor() {
            if (confirm("Do you want to Upload " + sendActionType) == true) {
                //Start Progress
                var sendingController = angular.element($('.progress')).scope();
                if (sendActionType == 'realSend') {
                    $('.realSend').text('Cancel Uploading');
                    sendingController.sendStart();
                }

                var sendForm = '';

                //$.ajax({
                //    type: 'POST',
                //    url: "GetUploadableData",
                //    data: { workCount: $('[name=workCount]').val(), processState: $('[name=processState]').val(), folderPath: $('[name=folderPath]').val() },
                //    dataType: "json",
                //    async: true,
                //    success: function (data) {
                                                
                //        //End Progress
                //        if (sendActionType == 'realSend') {
                //            $('.realSend').text('Real Send');
                //            //sendingController.sendStop();
                //        }

                //        alert(data.length);
                //    },
                //    error: function (e) {
                //        //End Progress
                //        if (sendActionType == 'realSend') {
                //            $('.realSend').text('Real Send');
                //            sendingController.sendStop();
                //        }

                //        alert('Error occured' +e);
                //    }
                //});
            }
        }

        var sendActionType = '';
        //$(document).ready(function () {

        //    $('.realSend').click(function () {
        //        sendActionType = 'realSend';
        //        var sendable = $('.realSend').text();
        //        if (sendable == 'Cancel Uploading') {
        //            var sendingController = angular.element($('.progress')).scope();
        //            $('.realSend').text('Real Send');
        //            sendingController.sendStop();
        //        }
        //        else {
        //            var sendingController = angular.element($('.progress')).scope();
        //            sendingController.progressUpdate();
        //            //realSend();
        //        }
                    
        //    });

        //});
    </script>
}


